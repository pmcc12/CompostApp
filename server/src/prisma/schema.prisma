// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId    Int            @id @default(autoincrement())
  email     String         @unique
  password  String
  username  String
  location  Json?
  balance   Int            @default(0)
  createdAt DateTime       @default(now())
  Product   Product[]
  OrderItem OrderItem[]
  // sentMessages     Message[]   @relation("sentMessages")
  // receivedMessages Message[]   @relation("receivedMessages")
  Inboxes   MessageInbox[] @relation("MessageInbox")
}

model Product {
  productId         Int                    @id @default(autoincrement())
  seller            User                   @relation(fields: [sellerId], references: [userId])
  sellerId          Int
  title             String
  categories        CategoriesOnProducts[]
  images            String?
  desc              String
  retailPrice       Float
  negotiable        Boolean
  availableQuantity Int
  unit              unit                   @default(KG)
  readyDate         String
  OrderItem         OrderItem[]
}

enum unit {
  KG
  Litter
  units
}

model Category {
  categoryId   Int                    @id @default(autoincrement())
  categoryName String                 @unique
  products     CategoriesOnProducts[]
}

model CategoriesOnProducts {
  product    Product  @relation(fields: [productId], references: [productId])
  productId  Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [categoryId])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)

  @@id([productId, categoryId])
}

model OrderItem {
  orderId       Int      @id @default(autoincrement())
  buyer         User     @relation(fields: [buyerId], references: [userId])
  buyerId       Int
  product       Product  @relation(fields: [productId], references: [productId])
  productId     Int
  orderPrice    Float
  orderQuantity Int
  resolved      Boolean  @default(false)
  createdAt     DateTime @default(now())
}

model MessageInbox {
  inboxId     Int       @id @default(autoincrement())
  // buyer       User      @relation("asBuyer", fields: [buyerId], references: [userId])
  // buyerId     Int
  // seller      User      @relation("asSeller", fields: [sellerId], references: [userId])
  // sellerId    Int
  users       User[]    @relation("MessageInbox", references: [userId])
  Message     Message[]
  lastUpdated DateTime  @default(now())
}

model Message {
  messageId  Int          @id @default(autoincrement())
  senderId   Int
  senderName String
  content    String
  createAt   DateTime     @default(now())
  inbox      MessageInbox @relation(fields: [inboxId], references: [inboxId])
  inboxId    Int
}
